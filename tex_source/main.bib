@InProceedings{BCP16,
author="Boyle, Elette
and Chung, Kai-Min
and Pass, Rafael",
editor="Kushilevitz, Eyal
and Malkin, Tal",
title="Oblivious Parallel RAM and Applications",
booktitle="Theory of Cryptography",
year="2016",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="175--204",
abstract="We initiate the study of cryptography for parallel RAM (PRAM) programs. The PRAM model captures modern multi-core architectures and cluster computing models, where several processors execute in parallel and make accesses to shared memory, and provides the ``best of both'' circuit and RAM models, supporting both cheap random access and parallelism.",
isbn="978-3-662-49099-0"
}

@InProceedings{CLT16,
author="Chen, Binyi
and Lin, Huijia
and Tessaro, Stefano",
editor="Kushilevitz, Eyal
and Malkin, Tal",
title="Oblivious Parallel RAM: Improved Efficiency and Generic Constructions",
booktitle="Theory of Cryptography",
year="2016",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="205--234",
abstract="Oblivious RAM (ORAM) garbles read/write operations by a client (to access a remote storage server or a random-access memory) so that an adversary observing the garbled access sequence cannot infer any information about the original operations, other than their overall number. This paper considers the natural setting of Oblivious Parallel RAM (OPRAM) recently introduced by Boyle, Chung, and Pass (TCC 2016A), where m clients simultaneously access in parallel the storage server. The clients are additionally connected via point-to-point links to coordinate their accesses. However, this additional inter-client communication must also remain oblivious.",
isbn="978-3-662-49099-0"
}

@misc{NK16,
      author = {Kartik Nayak and Jonathan Katz},
      title = {An Oblivious Parallel RAM with $O(\log^2 N)$ Parallel Runtime Blowup},
      howpublished = {Cryptology ePrint Archive, Paper 2016/1141},
      year = {2016},
      note = {\url{https://eprint.iacr.org/2016/1141}},
      url = {https://eprint.iacr.org/2016/1141}
}

@article{GO96,
  title={Software protection and simulation on oblivious RAMs},
  author={Goldreich, Oded and Ostrovsky, Rafail},
  journal={Journal of the ACM (JACM)},
  volume={43},
  number={3},
  pages={431--473},
  year={1996},
  publisher={ACM New York, NY, USA}
}


@misc{OptORAMa18,
      author = {Gilad Asharov and Ilan Komargodski and Wei-Kai Lin and Kartik Nayak and Enoch Peserico and Elaine Shi},
      title = {OptORAMa: Optimal Oblivious RAM},
      howpublished = {Cryptology ePrint Archive, Paper 2018/892},
      year = {2018},
      note = {\url{https://eprint.iacr.org/2018/892}},
      url = {https://eprint.iacr.org/2018/892}
}

@inproceedings{CS17,
  title={Circuit OPRAM: Unifying Statistically and Computationally Secure ORAMs and OPRAMs},
  booktitle={TCC (2)},
  publisher={Springer},
  pages={72-107},
  doi={10.1007/978-3-319-70503-3_3},
  author={T.-H. Hubert Chan and Elaine Shi},
  year=2017
}

@inproceedings{CNS18,
  title={Perfectly Secure Oblivious Parallel RAM},
  booktitle={Theory of Cryptography},
  series={Theory of Cryptography},
  publisher={Springer},
  volume={11240},
  pages={636-668},
  doi={10.1007/978-3-030-03810-6_23},
  author={T.-H. Hubert Chan and Kartik Nayak and Elaine Shi},
  year=2018
}

@misc{OptOPRAM20,
      author = {Gilad Asharov and Ilan Komargodski and Wei-Kai Lin and Enoch Peserico and Runting Shi},
      title = {Optimal Oblivious Parallel RAM},
      howpublished = {Cryptology ePrint Archive, Paper 2020/1292},
      year = {2020},
      doi = {10.1137/1.9781611977073.98},
      note = {\url{https://eprint.iacr.org/2020/1292}},
      url = {https://eprint.iacr.org/2020/1292}
}

@InProceedings{SCSL11,
author="Shi, Elaine
and Chan, T. -H. Hubert
and Stefanov, Emil
and Li, Mingfei",
editor="Lee, Dong Hoon
and Wang, Xiaoyun",
title="Oblivious RAM with O((logN)3) Worst-Case Cost",
booktitle="Advances in Cryptology -- ASIACRYPT 2011",
year="2011",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="197--214",
abstract="Oblivious RAM is a useful primitive that allows a client to hide its data access patterns from an untrusted server in storage outsourcing applications. Until recently, most prior works on Oblivious RAM aim to optimize its amortized cost, while suffering from linear or even higher worst-case cost. Such poor worst-case behavior renders these schemes impractical in realistic settings, since a data access request can occasionally be blocked waiting for an unreasonably large number of operations to complete.",
isbn="978-3-642-25385-0"
}


@misc{CP13,
      author = {Kai-Min Chung and Rafael Pass},
      title = {A Simple ORAM},
      howpublished = {Cryptology ePrint Archive, Paper 2013/243},
      year = {2013},
      note = {\url{https://eprint.iacr.org/2013/243}},
      url = {https://eprint.iacr.org/2013/243}
}


@article{Path18,
author = {Stefanov, Emil and Dijk, Marten Van and Shi, Elaine and Chan, T.-H. Hubert and Fletcher, Christopher and Ren, Ling and Yu, Xiangyao and Devadas, Srinivas},
title = {Path ORAM: An Extremely Simple Oblivious RAM Protocol},
year = {2018},
issue_date = {August 2018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {65},
number = {4},
issn = {0004-5411},
url = {https://doi.org/10.1145/3177872},
doi = {10.1145/3177872},
abstract = {We present Path ORAM, an extremely simple Oblivious RAM protocol with a small amount of client storage. Partly due to its simplicity, Path ORAM is the most practical ORAM scheme known to date with small client storage. We formally prove that Path ORAM has a O(log N) bandwidth cost for blocks of size B = Î© (log2 N) bits. For such block sizes, Path ORAM is asymptotically better than the best-known ORAM schemes with small client storage. Due to its practicality, Path ORAM has been adopted in the design of secure processors since its proposal.},
journal = {J. ACM},
month = {apr},
articleno = {18},
numpages = {26},
keywords = {access pattern, Path ORAM, Oblivious RAM, ORAM}
}

@InProceedings{DJM20,
author="Davies, Gareth T.
and Janson, Christian
and Martin, Daniel P.",
editor="Meng, Weizhi
and Gollmann, Dieter
and Jensen, Christian D.
and Zhou, Jianying",
title="Client-Oblivious OPRAM",
booktitle="Information and Communications Security",
year="2020",
publisher="Springer International Publishing",
address="Cham",
pages="312--330",
abstract="Oblivious Parallel RAM (OPRAM) enables multiple clients to synchronously make read and write accesses to shared memory (more generally, any data-store) whilst hiding the access patterns from the owner/provider of that shared memory. Prior work is best suited to the setting of multiple processors (or cores) within a single client device, and consequently there are shortcomings when applying that work to the multi-client setting where distinct client devices may not trust each other, or may simply wish to minimise -- for legal reasons or otherwise -- the volume of data that is leaked to other client devices. In prior constructions, obliviousness from the storage provider is achieved by passing accesses between the clients in one or more sorting networks, both before and after the logical access is made to the shared memory: this process inherently leaks the contents of the accesses to those other clients.",
isbn="978-3-030-61078-4"
}

